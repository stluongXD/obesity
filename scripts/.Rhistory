low_filt <- low_birth %>%
filter(column < input)
} else {
low_filt <- low_birth %>%
filter(column == input)
}
risk_ratio <- count(low_filt) / count(low_birth)
return(risk_ratio)
}
#Run these together to make dataframe
risks_data$Non_Hypertension <- birthwt_func(low_birth$ht, 0)
risks_data$Hypertension <- birthwt_func(low_birth$ht, 1)
risks_data$Non_Smoker <- birthwt_func(low_birth$smoke, 0)
risks_data$Smoker <- birthwt_func(low_birth$smoke, 1)
risks_data$Birth_Before_20 <- birthwt_func(low_birth$age, 20)
risks_data$Prenatal_Visits_0 <- birthwt_func(low_birth$ftv, 0)
#Run these together to create numeric dataframe
risks_data$Non_Hypertension <- as.numeric(as.character(unlist(risks_data[[1]])))
risks_data$Hypertension <- as.numeric(as.character(unlist(risks_data[[2]])))
risks_data$Non_Smoker <- as.numeric(as.character(unlist(risks_data[[3]])))
risks_data$Smoker <- as.numeric(as.character(unlist(risks_data[[4]])))
risks_data$Birth_Before_20 <- as.numeric(as.character(unlist(risks_data[[5]])))
risks_data$Prenatal_Visits_0 <- as.numeric(as.character(unlist(risks_data[[6]])))
final_risks <- risks_data
# CANCER
bdendo_data <- bdendo
hypertension <- bdendo_data %>%
filter(hyp == "Yes")
no_hypertension <- bdendo_data %>%
filter(hyp == "No")
hypertension_odds <- epitab(hypertension)
install.packages("epitab")
hypertension_odds <- epitab(hypertension, method="oddsratio")
library(epitab)
hypertension_odds <- epitab(hypertension, method="oddsratio")
install.packages("epitools")
library(dplyr)
library(tidyr)
library(HSAUR)
library(ggplot2)
library(MASS)
library(knitr)
library(stringr)
library(kableExtra)
library(Epi)
library(epitools)
data("BCG")
data("birthwt")
data("bdendo")
#BCG Odds and Relative Risks Calculation
#For each study present in the dataset, manually calculate
#(without the use of any epi packages) the odds ratio for each study.
#That is, the ratio of the odds of having received the BCG vaccine (given that you have TB),
#relative to the odds of having received the BCG vaccine (given that you don't have TB).
#In doing so, you will have to create some new columns (and I suggest you actually draw
#out the exposure matrix on paper). Please show your results in a visual form
#(histogram, table, or other representation as you see fit).
#Odds
BCG_data <- BCG
BCG_odds <- BCG_data %>%
mutate("BCG_No_TB" = (BCGVacc - BCGTB),
"NoVacc_No_TB" = (NoVacc - NoVaccTB),
"Odds_TB" = (BCGTB / NoVaccTB),
"Odds_No_TB" = (BCG_No_TB / NoVacc_No_TB),
"Odds_Ratio" = (Odds_TB / Odds_No_TB))
Sum_BCG <- BCG %>%
summarize("BCG_TB" = sum(BCGTB),
"BCG_No_TB" = sum(BCGVacc - BCGTB),
"BCGVacc" = sum(BCGVacc),
"NoVacc_TB" = sum(NoVaccTB),
"NoVacc_No_TB" = sum(NoVacc - NoVaccTB),
"NoVacc" = sum(NoVacc))
odds_TB <- Sum_BCG$BCG_TB / Sum_BCG$NoVacc_TB
odds_no_TB <- Sum_BCG$BCG_No_TB / Sum_BCG$NoVacc_No_TB
odds_vaccine <- odds_TB / odds_no_TB
vacc_plot_year <- ggplot(BCG_odds, aes(x = Odds_Ratio, y = Year)) +
geom_bar(stat = "identity", aes(fill= Year))
vacc_plot_lat <- ggplot(BCG_odds, aes(x = Odds_Ratio, y = Latitude)) +
geom_bar(stat = "identity", aes(fill = Latitude))
#Risks
BCG_risks <- BCG_data %>%
mutate("Risk_TB" = BCGTB / BCGVacc,
"Risk_No_TB" = (BCGVacc - BCGTB) / BCGVacc,
"Risk_Vacc" = (Risk_TB / Risk_No_TB))
risk_TB <- Sum_BCG$BCG_TB / Sum_BCG$BCGVacc
risk_no_TB <- Sum_BCG$BCG_No_TB / Sum_BCG$BCGVacc
risk_vaccine <- risk_TB / risk_no_TB
#birthwt Odds and Relative Risks Calculation
low_birth <- birthwt %>%
filter(low == 1)
risks_data <- data.frame(matrix(ncol = 0, nrow = 1))
birthwt_func <- function(column, input) {
#Calculation
if(column == low_birth[, "age"] && input < 100) {
low_filt <- low_birth %>%
filter(column < input)
} else {
low_filt <- low_birth %>%
filter(column == input)
}
risk_ratio <- count(low_filt) / count(low_birth)
return(risk_ratio)
}
#Run these together to make dataframe
risks_data$Non_Hypertension <- birthwt_func(low_birth$ht, 0)
risks_data$Hypertension <- birthwt_func(low_birth$ht, 1)
risks_data$Non_Smoker <- birthwt_func(low_birth$smoke, 0)
risks_data$Smoker <- birthwt_func(low_birth$smoke, 1)
risks_data$Birth_Before_20 <- birthwt_func(low_birth$age, 20)
risks_data$Prenatal_Visits_0 <- birthwt_func(low_birth$ftv, 0)
#Run these together to create numeric dataframe
risks_data$Non_Hypertension <- as.numeric(as.character(unlist(risks_data[[1]])))
risks_data$Hypertension <- as.numeric(as.character(unlist(risks_data[[2]])))
risks_data$Non_Smoker <- as.numeric(as.character(unlist(risks_data[[3]])))
risks_data$Smoker <- as.numeric(as.character(unlist(risks_data[[4]])))
risks_data$Birth_Before_20 <- as.numeric(as.character(unlist(risks_data[[5]])))
risks_data$Prenatal_Visits_0 <- as.numeric(as.character(unlist(risks_data[[6]])))
final_risks <- risks_data
# CANCER
bdendo_data <- bdendo
hypertension <- bdendo_data %>%
filter(hyp == "Yes")
no_hypertension <- bdendo_data %>%
filter(hyp == "No")
hypertension_odds <- epitab(hypertension, method="oddsratio")
hypertension_odds <- epitab(x = hypertension, y = null, method="oddsratio")
hypertension_odds <- epitab(x = bdendo_data$d, y = hypertension, method="oddsratio")
bdendo_data <- bdendo
bdendo_data$hypertension <- bdendo_data %>%
filter(hyp == "Yes")
hypertension_odds <- epitab(bdendo_data$d, bdendo$hyp, method="oddsratio")
View(hypertension_odds)
print(hypertension_odds)
hypertension_odds <- epitab(bdendo_data$d, bdendo$hyp, method="oddsratio", verbose = FALSE)
print(hypertension_odds)
hypertension_odds <- epitab(bdendo_data$d, bdendo$hyp, method="oddsratio")
print(hypertension_odds)
hypertension_yes <- bdendo_data %>%
filter(hyp = "Yes")
hypertension_yes <- bdendo_data %>%
filter(hyp == "Yes")
hypertension_odds <- epitab(hypertension_yes$d, hypertension_yes$hyp, method="oddsratio")
hypertension_odds <- epitab(bdendo$hyp, method="oddsratio")
hypertension_odds <- epitab(bdendo$hyp, NULL, method="oddsratio")
hypertension_odds <- epitab(bdendo$d, bdendo$hyp, method="oddsratio")
gall_bladder_odds <- epitab(bdendo$d, bdendo$gall, method="oddsratio")
obesity_odds <- epitab(bdendo$d, bdendo$ob, method="oddsratio")
print(obesity_odds)
vacc_plot <- ggplot(BCG_odds, aes(x=Odds_Ratio)) +
geom_histogram(binwidth=1)
print(vacc_plot)
vacc_plot <- ggplot(BCG_odds, aes(x=Odds_Ratio)) +
geom_histogram(binwidth=10)
print(vacc_plot)
vacc_plot <- ggplot(BCG_odds, aes(x=Odds_Ratio)) +
geom_histogram(binwidth=.3)
print(vacc_plot)
vacc_plot <- ggplot(BCG_odds, aes(x=Odds_Ratio)) +
geom_histogram(binwidth=.1)
print(vacc_plot)
vacc_plot <- ggplot(BCG_odds, aes(x=Odds_Ratio)) +
geom_histogram(binwidth=.3)
print(vacc_plot)
vacc_plot <- ggplot(BCG_odds, aes(x=Odds_Ratio)) +
geom_histogram(binwidth=.3, fill = Odds_Ratio)
vacc_plot <- ggplot(BCG_odds, aes(x=Odds_Ratio)) +
geom_histogram(binwidth=.3, aes(fill = Odds_Ratio))
print(vacc_plot)
vacc_plot <- ggplot(BCG_odds, aes(x=Odds_Ratio)) +
geom_histogram(binwidth=.3, fill = "000")
print(vacc_plot)
vacc_plot <- ggplot(BCG_odds, aes(x=Odds_Ratio)) +
geom_histogram(binwidth=.3, aes(fill = "000"))
print(vacc_plot)
vacc_plot <- ggplot(BCG_odds, aes(x=Odds_Ratio)) +
geom_histogram(binwidth=.3, fill = "lightblue")
print(vacc_plot)
vacc_plot <- ggplot(BCG_odds, aes(x=Odds_Ratio)) +
geom_histogram(binwidth=.3, fill = "lightblue", color = "darkgrey")
print(vacc_plot)
vacc_plot <- ggplot(BCG_odds, aes(x=Odds_Ratio)) +
geom_histogram(binwidth=.3, fill = "navy", color = "darkgrey")
print(vacc_plot)
comparison_vacc <- data.frame(c("Risks" = BCG_risks$Risk_Vacc, "Odds_Ratio" = BCG_odds$Odds_Ratio))
View(comparison_vacc)
comparison_vacc <- data.frame("Risks" = BCG_risks$Risk_Vacc, "Odds_Ratio" = BCG_odds$Odds_Ratio)
View(comparison_vacc)
comp_vacc <- ggplot(comparision_vacc, aes(x = Risks, y = Odds_Ratio)) +
geom_point(aes(color = "blue")) +
labs(x = "Risks",
y = "Odds Ratios",
title = "Relationship between Odds Ratios and Risk Ratios")
# Script in which you should do your analysis described on Canvas
library(dplyr)
library(tidyr)
library(HSAUR)
library(ggplot2)
library(MASS)
library(knitr)
library(stringr)
library(kableExtra)
library(Epi)
library(epitools)
data("BCG")
data("birthwt")
data("bdendo")
#BCG Odds and Relative Risks Calculation
#For each study present in the dataset, manually calculate
#(without the use of any epi packages) the odds ratio for each study.
#That is, the ratio of the odds of having received the BCG vaccine (given that you have TB),
#relative to the odds of having received the BCG vaccine (given that you don't have TB).
#In doing so, you will have to create some new columns (and I suggest you actually draw
#out the exposure matrix on paper). Please show your results in a visual form
#(histogram, table, or other representation as you see fit).
#Odds
BCG_data <- BCG
BCG_odds <- BCG_data %>%
mutate("BCG_No_TB" = (BCGVacc - BCGTB),
"NoVacc_No_TB" = (NoVacc - NoVaccTB),
"Odds_TB" = (BCGTB / NoVaccTB),
"Odds_No_TB" = (BCG_No_TB / NoVacc_No_TB),
"Odds_Ratio" = (Odds_TB / Odds_No_TB))
Sum_BCG <- BCG %>%
summarize("BCG_TB" = sum(BCGTB),
"BCG_No_TB" = sum(BCGVacc - BCGTB),
"BCGVacc" = sum(BCGVacc),
"NoVacc_TB" = sum(NoVaccTB),
"NoVacc_No_TB" = sum(NoVacc - NoVaccTB),
"NoVacc" = sum(NoVacc))
odds_TB <- Sum_BCG$BCG_TB / Sum_BCG$NoVacc_TB
odds_no_TB <- Sum_BCG$BCG_No_TB / Sum_BCG$NoVacc_No_TB
odds_vaccine <- odds_TB / odds_no_TB
vacc_plot_year <- ggplot(BCG_odds, aes(x = Odds_Ratio, y = Year)) +
geom_bar(stat = "identity", aes(fill= Year))
vacc_plot_lat <- ggplot(BCG_odds, aes(x = Odds_Ratio, y = Latitude)) +
geom_bar(stat = "identity", aes(fill = Latitude))
#Risks
BCG_risks <- BCG_data %>%
mutate("Risk_TB" = BCGTB / BCGVacc,
"Risk_No_TB" = (BCGVacc - BCGTB) / BCGVacc,
"Risk_Vacc" = (Risk_TB / Risk_No_TB))
risk_TB <- Sum_BCG$BCG_TB / Sum_BCG$BCGVacc
risk_no_TB <- Sum_BCG$BCG_No_TB / Sum_BCG$BCGVacc
risk_vaccine <- risk_TB / risk_no_TB
comparison_vacc <- data.frame("Risks" = BCG_risks$Risk_Vacc, "Odds_Ratio" = BCG_odds$Odds_Ratio)
#birthwt Odds and Relative Risks Calculation
low_birth <- birthwt %>%
filter(low == 1)
risks_data <- data.frame(matrix(ncol = 0, nrow = 1))
birthwt_func <- function(column, input) {
#Calculation
if(column == low_birth[, "age"] && input < 100) {
low_filt <- low_birth %>%
filter(column < input)
} else {
low_filt <- low_birth %>%
filter(column == input)
}
risk_ratio <- count(low_filt) / count(low_birth)
return(risk_ratio)
}
#Run these together to make dataframe
risks_data$Non_Hypertension <- birthwt_func(low_birth$ht, 0)
risks_data$Hypertension <- birthwt_func(low_birth$ht, 1)
risks_data$Non_Smoker <- birthwt_func(low_birth$smoke, 0)
risks_data$Smoker <- birthwt_func(low_birth$smoke, 1)
risks_data$Birth_Before_20 <- birthwt_func(low_birth$age, 20)
risks_data$Prenatal_Visits_0 <- birthwt_func(low_birth$ftv, 0)
#Run these together to create numeric dataframe
risks_data$Non_Hypertension <- as.numeric(as.character(unlist(risks_data[[1]])))
risks_data$Hypertension <- as.numeric(as.character(unlist(risks_data[[2]])))
risks_data$Non_Smoker <- as.numeric(as.character(unlist(risks_data[[3]])))
risks_data$Smoker <- as.numeric(as.character(unlist(risks_data[[4]])))
risks_data$Birth_Before_20 <- as.numeric(as.character(unlist(risks_data[[5]])))
risks_data$Prenatal_Visits_0 <- as.numeric(as.character(unlist(risks_data[[6]])))
final_risks <- risks_data
# CANCER
bdendo_data <- bdendo
hypertension_odds <- epitab(bdendo$d, bdendo$hyp, method="oddsratio")
gall_bladder_odds <- epitab(bdendo$d, bdendo$gall, method="oddsratio")
obesity_odds <- epitab(bdendo$d, bdendo$ob, method="oddsratio")
comp_vacc <- ggplot(comparision_vacc, aes(x = Risks, y = Odds_Ratio)) +
geom_point(aes(color = "blue")) +
labs(x = "Risks",
y = "Odds Ratios",
title = "Relationship between Odds Ratios and Risk Ratios")
comparison_vacc <- comparison_vacc
comp_vacc <- ggplot(comparision_vacc, aes(x = Risks, y = Odds_Ratio)) +
geom_point(aes(color = "blue")) +
labs(x = "Risks",
y = "Odds Ratios",
title = "Relationship between Odds Ratios and Risk Ratios")
source("analysis.R")
library(dplyr)
library(tidyr)
library(ggplot2)
library(knitr)
library(stringr)
library(kableExtra)
library(wesanderson)
comparison_vacc <- comparison_vacc
comp_vacc <- ggplot(comparision_vacc, aes(x = Risks, y = Odds_Ratio)) +
geom_point(aes(color = "blue")) +
labs(x = "Risks",
y = "Odds Ratios",
title = "Relationship between Odds Ratios and Risk Ratios")
View(comparison_vacc)
comparison_vacc <- comparison_vacc
comp_vacc <- ggplot(comparison_vacc, aes(x = Risks, y = Odds_Ratio)) +
geom_point(aes(color = "blue")) +
labs(x = "Risks",
y = "Odds Ratios",
title = "Relationship between Odds Ratios and Risk Ratios")
print(comp_vacc)
comparison_vacc <- comparison_vacc
comp_vacc <- ggplot(comparison_vacc, aes(x = Risks, y = Odds_Ratio)) +
geom_point(color = "blue") +
labs(x = "Risks",
y = "Odds Ratios",
title = "Relationship between Odds Ratios and Risk Ratios")
print(comp_vacc)
comparison_vacc <- comparison_vacc
comp_vacc <- ggplot(comparison_vacc, aes(x = Odds_Ratio, y = Risks)) +
geom_point(color = "blue") +
labs(x = "Risks",
y = "Odds Ratios",
title = "Relationship between Odds Ratios and Risk Ratios")
print(comp_vacc)
comparison_vacc <- comparison_vacc
comp_vacc <- ggplot(comparison_vacc, aes(x = Risks, y = Odds_Ratio)) +
geom_point(color = "blue") +
labs(x = "Risks",
y = "Odds Ratios",
title = "Relationship between Odds Ratios and Risk Ratios")
print(comp_vacc)
final_risks <- final_risks
kable(final_risks, col.names = c("Non-Hypertension", "Hypertension", "Non-Smoker",
"Smoker", "Birth Before Age of 20", "0 Prenatal Visits")) %>%
kable_styling(latex_options = "striped")
vacc_plot <- ggplot(BCG_odds, aes(x=Odds_Ratio)) +
geom_histogram(binwidth=.3, fill = "navy", color = "darkgrey") +
labs(x = "Odds Ratios",
y = "Frequency",
title = "Odds Ratios of Receiving BCG Vaccine")
print(vacc_plot)
cancer_table <- data.frame("Hypertension" = hypertension_odds)
View(cancer_table)
hypertension_odds <- hypertension_odds %>%
select(hypertension_odds$tab)
cancer_table <- data.frame("Hypertension" = hypertension_odds, "Gall_Bladder" = gall_bladder_odds,
"Obesity_odds" = obesity_odds)
View(cancer_table)
cancer_table <- cancer_table[2,]
View(cancer_table)
cancer_odds <- data.frame("Hypertension_Odds_Ratio" = cancer_table$Hypertension.tab.oddsratio,
"Gall_Bladder_Odds_Ratio" = cancer_table$Gall_Bladder.tab.oddsratio,
"Obesity_Odds_Ratio" = cancer_table$Obesity_odds.tab.oddsratio,)
cancer_odds <- data.frame("Hypertension_Odds_Ratio" = cancer_table$Hypertension.tab.oddsratio,
"Gall_Bladder_Odds_Ratio" = cancer_table$Gall_Bladder.tab.oddsratio,
"Obesity_Odds_Ratio" = cancer_table$Obesity_odds.tab.oddsratio,)
cancer_odds <- data.frame("Hypertension_Odds_Ratio" = cancer_table$Hypertension.tab.oddsratio,
"Gall_Bladder_Odds_Ratio" = cancer_table$Gall_Bladder.tab.oddsratio,
"Obesity_Odds_Ratio" = cancer_table$Obesity_odds.tab.oddsratio)
View(cancer_odds)
cancer_odds <- cancer_odds
kable(cancer_odds, col.names = c("Hypertension", "Gall Bladder Disease", "Obesity")) %>%
kable_styling(latex_options = "striped")
cancer_odds <- cancer_odds
kable(cancer_odds, col.names = c("Hypertension", "Gall Bladder Disease", "Obesity")) %>%
kable_styling(latex_options = "striped")
library(dplyr)
library(plotly)
library(ggplot2)
legislation <- read.csv("../data/legislation.csv") %>%
rename(State = LocationDesc) # need to rename column so that we can join the two data sets later
obesity <- read.csv("../data/Obesity_GDP_PanelData.csv")
combined <- merge(legislation, obesity, by=c("State", "Year"))
grouped_states_year <- combined %>%
group_by(State, Year, LocationAbbr, Adult.Obesity.100)
# counts number of legislatiosn proposed or enacted
annual_count <- count(grouped_states_year, "Title") %>%
rename(num_legislation = n) %>%
select(State, LocationAbbr, Year, num_legislation, Adult.Obesity.100)
View(annual_count)
annual_count$Adult.Obesity.100 <- paste("Obesity Percentage: ", annual_count$Adult.Obesity.100)
generate_map <- function(input_year) {
filtered_count <- annual_count %>%
filter(Year == input_year)
geography <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = FALSE
)
fig <- plot_geo(filtered_count, locationmode = 'USA-states') %>%
add_trace(z = ~num_legislation, text = ~Adult.Obesity.100, locations = ~LocationAbbr,
color = ~num_legislation, colors = 'Blues') %>%
layout(title = "Obesity Related State Legislation Introduced",
geo = geography)
fig <- fig %>%
colorbar(title = "Legislation")
fig
}
print(generate_map(2015))
setwd("~/Info 478/obesity/scripts")
library(dplyr)
library(plotly)
library(ggplot2)
legislation <- read.csv("../data/legislation.csv") %>%
rename(State = LocationDesc) # need to rename column so that we can join the two data sets later
obesity <- read.csv("../data/Obesity_GDP_PanelData.csv")
combined <- merge(legislation, obesity, by=c("State", "Year"))
grouped_states_year <- combined %>%
group_by(State, Year, LocationAbbr, Adult.Obesity.100)
# counts number of legislatiosn proposed or enacted
annual_count <- count(grouped_states_year, "Title") %>%
rename(num_legislation = n) %>%
select(State, LocationAbbr, Year, num_legislation, Adult.Obesity.100)
View(annual_count)
annual_count$Adult.Obesity.100 <- paste("Obesity Percentage: ", annual_count$Adult.Obesity.100)
generate_map <- function(input_year) {
filtered_count <- annual_count %>%
filter(Year == input_year)
geography <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = FALSE
)
fig <- plot_geo(filtered_count, locationmode = 'USA-states') %>%
add_trace(z = ~num_legislation, text = ~Adult.Obesity.100, locations = ~LocationAbbr,
color = ~num_legislation, colors = 'Blues') %>%
layout(title = "Obesity Related State Legislation Introduced",
geo = geography)
fig <- fig %>%
colorbar(title = "Legislation")
fig
}
print(generate_map(2015))
setwd("~/Info 478/obesity")
setwd("~/Info 478/obesity")
setwd("~/Info 478/obesity/scripts")
library(dplyr)
library(plotly)
library(ggplot2)
legislation <- read.csv("../data/legislation.csv") %>%
rename(State = LocationDesc) # need to rename column so that we can join the two data sets later
obesity <- read.csv("../data/Obesity_GDP_PanelData.csv")
combined <- merge(legislation, obesity, by=c("State", "Year"))
legislation <- read.csv("../data/legislation.csv") %>%
rename(State = LocationDesc, Year = ï..Year) # need to rename column so that we can join the two data sets later
obesity <- read.csv("../data/Obesity_GDP_PanelData.csv")
combined <- merge(legislation, obesity, by=c("State", "Year"))
rouped_states_year <- combined %>%
group_by(State, Year, LocationAbbr, Adult.Obesity.100)
# counts number of legislatiosn proposed or enacted
annual_count <- count(grouped_states_year, "Title") %>%
rename(num_legislation = n) %>%
select(State, LocationAbbr, Year, num_legislation, Adult.Obesity.100)
View(annual_count)
annual_count$Adult.Obesity.100 <- paste("Obesity Percentage: ", annual_count$Adult.Obesity.100)
generate_map <- function(input_year) {
filtered_count <- annual_count %>%
filter(Year == input_year)
geography <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = FALSE
)
fig <- plot_geo(filtered_count, locationmode = 'USA-states') %>%
add_trace(z = ~num_legislation, text = ~Adult.Obesity.100, locations = ~LocationAbbr,
color = ~num_legislation, colors = 'Blues') %>%
layout(title = "Obesity Related State Legislation Introduced",
geo = geography)
fig <- fig %>%
colorbar(title = "Legislation")
fig
}
print(generate_map(2015))
library(dplyr)
library(plotly)
library(ggplot2)
legislation <- read.csv("../data/legislation.csv") %>%
rename(State = LocationDesc, Year = ï..Year) # need to rename column so that we can join the two data sets later
obesity <- read.csv("../data/Obesity_GDP_PanelData.csv")
combined <- merge(legislation, obesity, by=c("State", "Year"))
grouped_states_year <- combined %>%
group_by(State, Year, LocationAbbr, Adult.Obesity.100)
# counts number of legislatiosn proposed or enacted
annual_count <- count(grouped_states_year, "Title") %>%
rename(num_legislation = n) %>%
select(State, LocationAbbr, Year, num_legislation, Adult.Obesity.100)
View(annual_count)
annual_count$Adult.Obesity.100 <- paste("Obesity Percentage: ", annual_count$Adult.Obesity.100)
generate_map <- function(input_year) {
filtered_count <- annual_count %>%
filter(Year == input_year)
geography <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = FALSE
)
fig <- plot_geo(filtered_count, locationmode = 'USA-states') %>%
add_trace(z = ~num_legislation, text = ~Adult.Obesity.100, locations = ~LocationAbbr,
color = ~num_legislation, colors = 'Blues') %>%
layout(title = "Obesity Related State Legislation Introduced",
geo = geography)
fig <- fig %>%
colorbar(title = "Legislation")
fig
}
print(generate_map(2015))
shiny::runApp('~/Info 478/obesity')
runApp('~/Info 478/obesity')
